{% set nexus_aliases = [] %}
{% if nexus_server_alias %}
  {% if nexus_server_alias is string %}
    {% set _ = nexus_aliases.append(nexus_server_alias) %}
  {% else %}
    {% for alias in nexus_server_alias %}
      {% if alias %}
        {% set _ = nexus_aliases.append(alias) %}
      {% endif %}
    {% endfor %}
  {% endif %}
{% endif %}
{% set portainer_aliases = [] %}
{% if portainer_server_alias %}
  {% if portainer_server_alias is string %}
    {% set _ = portainer_aliases.append(portainer_server_alias) %}
  {% else %}
    {% for alias in portainer_server_alias %}
      {% if alias %}
        {% set _ = portainer_aliases.append(alias) %}
      {% endif %}
    {% endfor %}
  {% endif %}
{% endif %}
{% set nexus_server_names = [] %}
{% if nexus_server_name %}
  {% set _ = nexus_server_names.append(nexus_server_name) %}
{% endif %}
{% for alias in nexus_aliases %}
  {% set _ = nexus_server_names.append(alias) %}
{% endfor %}
{% set nexus_server_names = nexus_server_names | unique %}
{% set portainer_server_names = [] %}
{% if portainer_server_name %}
  {% set _ = portainer_server_names.append(portainer_server_name) %}
{% endif %}
{% for alias in portainer_aliases %}
  {% set _ = portainer_server_names.append(alias) %}
{% endfor %}
{% set portainer_server_names = portainer_server_names | unique %}

server {
        listen 80;
        listen [::]:80;
        server_name {{ nexus_server_names | join(' ') }};

        location ~ /.well-known/acme-challenge {
          allow all;
          root /var/www/html;
        }

        location / {
                rewrite ^ https://$host$request_uri? permanent;
        }
}

{% if portainer_use_nginx_proxy | bool and portainer_server_name %}
server {
        listen 80;
        listen [::]:80;
        server_name {{ portainer_server_names | join(' ') }};

        location ~ /.well-known/acme-challenge {
          allow all;
          root /var/www/html;
        }

        location / {
                rewrite ^ https://$host$request_uri? permanent;
        }
}

server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name {{ portainer_server_names | join(' ') }};

        proxy_send_timeout        120;
        proxy_read_timeout        300;
        proxy_buffering           off;
        keepalive_timeout         5 5;
        tcp_nodelay               on;

        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/{{ nexus_server_name }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ nexus_server_name }}/privkey.pem;

        ssl_buffer_size 8k;

        ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
        ssl_prefer_server_ciphers on;

        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        ssl_ecdh_curve secp384r1;
        ssl_session_tickets off;

        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 127.0.0.11 ipv6=off;

        location / {
             proxy_http_version 1.1;
             proxy_set_header Upgrade $http_upgrade;
             proxy_set_header Connection "upgrade";
             proxy_set_header Host $host:$server_port;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Forwarded-Proto "https";
             proxy_pass http://portainer:{{ portainer_backend_port }};
        }
}
{% endif %}

server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name {{ nexus_server_names | join(' ') }};

        proxy_send_timeout        120;
        proxy_read_timeout        300;
        proxy_buffering           off;
        keepalive_timeout         5 5;
        tcp_nodelay               on;
        client_max_body_size      1G;

        server_tokens off;


        ssl_certificate /etc/letsencrypt/live/{{ nexus_server_name }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ nexus_server_name }}/privkey.pem;

        ssl_buffer_size 8k;

        ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
        ssl_prefer_server_ciphers on;

        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        ssl_ecdh_curve secp384r1;
        ssl_session_tickets off;

        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 127.0.0.11 ipv6=off;

        # Docker /v2 and /v1 (for search) requests
        location /v2 {
             proxy_set_header Host $host:$server_port;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Forwarded-Proto "https";
             proxy_pass http://{{ nexus_backend_name }}:{{ nexus_backend_port }}/repository/docker-proxy/$request_uri;
        }
        location /v1 {
             proxy_set_header Host $host:$server_port;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Forwarded-Proto "https";
             proxy_pass http://{{ nexus_backend_name }}:{{ nexus_backend_port }}/repository/docker-proxy/$request_uri;
        }

        # Regular Nexus requests
        location / {
             proxy_set_header Host $host:$server_port;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Forwarded-Proto "https";
             proxy_pass http://{{ nexus_backend_name }}:{{ nexus_backend_port }};

             add_header X-Frame-Options "SAMEORIGIN" always;
             add_header X-XSS-Protection "1; mode=block" always;
             add_header X-Content-Type-Options "nosniff" always;
             add_header Referrer-Policy "no-referrer-when-downgrade" always;
             add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
             # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
             # enable strict transport security only if you understand the implications
        }
}
